{"version":3,"file":"recaptcha-v3.service.d.ts","sources":["recaptcha-v3.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare const RECAPTCHA_V3_SITE_KEY: InjectionToken<string>;\nexport interface OnExecuteData {\n    /**\n     * The name of the action that has been executed.\n     */\n    action: string;\n    /**\n     * The token that reCAPTCHA v3 provided when executing the action.\n     */\n    token: string;\n}\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\nexport declare class ReCaptchaV3Service {\n    constructor(zone: NgZone, siteKey: string, platformId: any, baseUrl?: string, nonce?: string);\n    readonly onExecute: Observable<OnExecuteData>;\n    /**\n     * Executes the provided `action` with reCAPTCHA v3 API.\n     * Use the emitted token value for verification purposes on the backend.\n     *\n     * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n     * https://developers.google.com/recaptcha/docs/v3.\n     *\n     * @param {string} action the action to execute\n     * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n     * The returned `Observable` completes immediately after emitting a value.\n     */\n    execute(action: string): Observable<string>;\n}\n"]}